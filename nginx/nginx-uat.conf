user nginx;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
					  'rt=$request_time uct="$upstream_connect_time" '
					  'uht="$upstream_header_time" urt="$upstream_response_time"';

# http {
#    log_format main '$remote_addr - $remote_user [$time_local] '
#                       '"$request" $status $body_bytes_sent '
#                       '"$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$request_body"';
                      
    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
	keepalive_requests  10000;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

	# security header
	server_tokens off;
	add_header X-Frame-Options SAMEORIGIN;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";
	add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
	#add_header Content-Security-Policy "default-src 'self';";

	# for load balance for sticky session
	# refer https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/	
	# note: if you want to test your containers locally, u need to change to your ip address (localhost doesn't seem to work)
	upstream backendForPublic {
		server a8ebd6539a8694cfabd25edb72d02672-e9570f66602f065e.elb.ap-southeast-1.amazonaws.com:9090;
	}
	
    server {
        listen       80;
        server_name  cps-uat-public;
		error_log /var/log/nginx/error.log debug;
		access_log   /var/log/nginx/access.log main;
		root         /var/www/nginx;
		index        index.html index.htm;
		
		# forward public traffic 
		location /webservice-public/ {
		  proxy_set_header X-Real-IP $remote_addr;
		  proxy_pass http://backendForPublic/webservice-public/;

		  # WebSocket support
		  proxy_http_version 1.1;
		  proxy_set_header Upgrade $http_upgrade;
		  proxy_set_header Connection "upgrade";
		}
		
		# redirect request
		location = /      { return 301 http://$host/public/;}
		
		# allow file upload of up to 10MB
		client_max_body_size 100M;
		
        location /public/ {
			try_files $uri $uri/ /public/index.html =404;
        }
		
		error_page 404 /404.html;
		location = /404.html {
		}
		
		error_page 403 /403.html;
		location = /403.html {
		}

		error_page 500 502 503 504 /50x.html;
		location = /50x.html {
		}
    }
}
